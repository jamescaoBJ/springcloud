<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.ncme.springboot.mapper.SystemUserMapper">
	<resultMap id="BaseResultMap" type="com.ncme.springboot.model.SystemUser">
		<id column="ID" jdbcType="INTEGER" property="id" />
		<result column="REAL_NAME" jdbcType="VARCHAR" property="realName" />
		<result column="BIRTHDAY" jdbcType="DATE" property="birthday" />
		<result column="SEX" jdbcType="INTEGER" property="sex" />
		<result column="MOBIL_PHONE" jdbcType="VARCHAR" property="mobilPhone" />
		<result column="TELPHONE" jdbcType="VARCHAR" property="telphone" />
		<result column="EMAIL" jdbcType="VARCHAR" property="email" />
		<result column="CERTIFICATE_TYPE" jdbcType="INTEGER" property="certificateType" />
		<result column="CERTIFICATE_NO" jdbcType="VARCHAR" property="certificateNo" />
		<result column="WORK_UNIT" jdbcType="VARCHAR" property="workUnit" />
		<result column="CONTACT_ADDRESS" jdbcType="VARCHAR" property="contactAddress" />
		<result column="POST_CODE" jdbcType="VARCHAR" property="postCode" />
		<result column="PROFESSION" jdbcType="VARCHAR" property="profession" />
		<result column="DEPT_NAME" jdbcType="VARCHAR" property="deptName" />
		<result column="PROF_TITLE" jdbcType="VARCHAR" property="profTitle" />
		<result column="PASSWORD_QUESTION" jdbcType="VARCHAR" property="passwordQuestion" />
		<result column="PASSWORD_QUESTION_ANSWER" jdbcType="VARCHAR" property="passwordQuestionAnswer" />
		<result column="STATUS" jdbcType="INTEGER" property="status" />
		<result column="LAST_LOGIN_DATE" jdbcType="DATE" property="lastLoginDate" />
		<result column="LAST_LOGIN_IP" jdbcType="VARCHAR" property="lastLoginIp" />
		<result column="AGE" jdbcType="INTEGER" property="age" />
		<result column="WORK_UNIT_ID" jdbcType="INTEGER" property="workUnitId" />
		<result column="EDUCATION" jdbcType="INTEGER" property="education" />
		<result column="REG_DATE" jdbcType="TIMESTAMP" property="regDate" />
		<result column="HEALTH_CERTIFICATE" jdbcType="VARCHAR" property="healthCertificate" />
		<result column="IC_CARD_INT" jdbcType="VARCHAR" property="icCardInt" />
		<result column="USER_TYPE" jdbcType="VARCHAR" property="userType" />
		<result column="USER_IMAGE" jdbcType="INTEGER" property="userImage" />
		<result column="hospital_address" jdbcType="VARCHAR" property="hospitalAddress" />
		<result column="user_avatar" jdbcType="VARCHAR" property="userAvatar" />
		<result column="other_hospital_name" jdbcType="VARCHAR"	property="otherHospitalName" />
		<result column="login_error_num" jdbcType="INTEGER" property="loginErrorNum" />
		<result column="login_error_first_time" jdbcType="BIGINT" property="loginErrorFirstTime" />
		<result column="login_error_last_time" jdbcType="BIGINT" property="loginErrorLastTime" />
		<result column="last_update_date" jdbcType="TIMESTAMP"	property="lastUpdateDate" />
		<result column="grassroot" jdbcType="INTEGER" property="grassroot" />
		<result column="USER_PROVINCE_ID" jdbcType="INTEGER" property="userProvinceId" />
		<result column="openid" jdbcType="VARCHAR" property="openid" />
	</resultMap>
	<sql id="Base_Column_List">
		u.ID, u.REAL_NAME, u.BIRTHDAY, u.SEX, u.MOBIL_PHONE, u.TELPHONE, u.EMAIL,
		u.CERTIFICATE_TYPE, u.CERTIFICATE_NO,
		u.WORK_UNIT, u.CONTACT_ADDRESS, u.POST_CODE, u.PROFESSION, u.DEPT_NAME,
		u.PROF_TITLE, u.PASSWORD_QUESTION,
		u.PASSWORD_QUESTION_ANSWER, u.STATUS, u.LAST_LOGIN_DATE, u.LAST_LOGIN_IP, u.AGE, u.WORK_UNIT_ID,
		u.EDUCATION, u.REG_DATE, u.HEALTH_CERTIFICATE, u.IC_CARD_INT,
		u.USER_TYPE, u.USER_IMAGE, u.hospital_address,
		u.user_avatar, u.other_hospital_name, u.login_error_num, u.login_error_first_time,
		u.login_error_last_time,
		u.last_update_date,u.grassroot
	</sql>
	<select id="selectByPrimaryKey" parameterType="java.lang.Integer"
		resultMap="BaseResultMap">
		select
		<include refid="Base_Column_List" />
		from system_user u
		where ID = #{id,jdbcType=INTEGER}
	</select>

	<delete id="deleteByPrimaryKey" parameterType="java.lang.Integer">
		delete from system_user
		where ID = #{id,jdbcType=INTEGER}
	</delete>
	<insert id="insert" parameterType="com.ncme.springboot.model.SystemUser">
		insert into system_user (ID, REAL_NAME, BIRTHDAY,
		SEX, MOBIL_PHONE, TELPHONE,
		EMAIL, CERTIFICATE_TYPE, CERTIFICATE_NO,
		WORK_UNIT, CONTACT_ADDRESS, POST_CODE,
		PROFESSION, DEPT_NAME, PROF_TITLE,
		PASSWORD_QUESTION, PASSWORD_QUESTION_ANSWER,
		STATUS, LAST_LOGIN_DATE, LAST_LOGIN_IP,
		AGE, WORK_UNIT_ID, EDUCATION,
		REG_DATE, HEALTH_CERTIFICATE, IC_CARD_INT,
		USER_TYPE, USER_IMAGE, hospital_address,
		user_avatar, other_hospital_name, login_error_num,
		login_error_first_time, login_error_last_time,
		last_update_date,grassroot)
		values (#{id,jdbcType=INTEGER}, #{realName,jdbcType=VARCHAR},
		#{birthday,jdbcType=DATE},
		#{sex,jdbcType=INTEGER}, #{mobilPhone,jdbcType=VARCHAR}, #{telphone,jdbcType=VARCHAR},
		#{email,jdbcType=VARCHAR}, #{certificateType,jdbcType=INTEGER},
		#{certificateNo,jdbcType=VARCHAR},
		#{workUnit,jdbcType=VARCHAR}, #{contactAddress,jdbcType=VARCHAR}, #{postCode,jdbcType=VARCHAR},
		#{profession,jdbcType=VARCHAR}, #{deptName,jdbcType=VARCHAR},
		#{profTitle,jdbcType=VARCHAR},
		#{passwordQuestion,jdbcType=VARCHAR}, #{passwordQuestionAnswer,jdbcType=VARCHAR},
		#{status,jdbcType=INTEGER}, #{lastLoginDate,jdbcType=DATE},
		#{lastLoginIp,jdbcType=VARCHAR},
		#{age,jdbcType=INTEGER}, #{workUnitId,jdbcType=INTEGER}, #{education,jdbcType=INTEGER},
		#{regDate,jdbcType=TIMESTAMP}, #{healthCertificate,jdbcType=VARCHAR},
		#{icCardInt,jdbcType=VARCHAR},
		#{userType,jdbcType=VARCHAR}, #{userImage,jdbcType=INTEGER}, #{hospitalAddress,jdbcType=VARCHAR},
		#{userAvatar,jdbcType=VARCHAR}, #{otherHospitalName,jdbcType=VARCHAR},
		#{loginErrorNum,jdbcType=INTEGER},
		#{loginErrorFirstTime,jdbcType=BIGINT},
		#{loginErrorLastTime,jdbcType=BIGINT},
		#{lastUpdateDate,jdbcType=TIMESTAMP}, #{grassroot,jdbcType=INTEGER})
	</insert>
	<insert id="insertSelective" parameterType="com.ncme.springboot.model.SystemUser">
		insert into system_user
		<trim prefix="(" suffix=")" suffixOverrides=",">
			<if test="id != null">
				ID,
			</if>
			<if test="realName != null">
				REAL_NAME,
			</if>
			<if test="birthday != null">
				BIRTHDAY,
			</if>
			<if test="sex != null">
				SEX,
			</if>
			<if test="mobilPhone != null">
				MOBIL_PHONE,
			</if>
			<if test="telphone != null">
				TELPHONE,
			</if>
			<if test="email != null">
				EMAIL,
			</if>
			<if test="certificateType != null">
				CERTIFICATE_TYPE,
			</if>
			<if test="certificateNo != null">
				CERTIFICATE_NO,
			</if>
			<if test="workUnit != null">
				WORK_UNIT,
			</if>
			<if test="contactAddress != null">
				CONTACT_ADDRESS,
			</if>
			<if test="postCode != null">
				POST_CODE,
			</if>
			<if test="profession != null">
				PROFESSION,
			</if>
			<if test="deptName != null">
				DEPT_NAME,
			</if>
			<if test="profTitle != null">
				PROF_TITLE,
			</if>
			<if test="passwordQuestion != null">
				PASSWORD_QUESTION,
			</if>
			<if test="passwordQuestionAnswer != null">
				PASSWORD_QUESTION_ANSWER,
			</if>
			<if test="status != null">
				STATUS,
			</if>
			<if test="lastLoginDate != null">
				LAST_LOGIN_DATE,
			</if>
			<if test="lastLoginIp != null">
				LAST_LOGIN_IP,
			</if>
			<if test="age != null">
				AGE,
			</if>
			<if test="workUnitId != null">
				WORK_UNIT_ID,
			</if>
			<if test="education != null">
				EDUCATION,
			</if>
			<if test="regDate != null">
				REG_DATE,
			</if>
			<if test="healthCertificate != null">
				HEALTH_CERTIFICATE,
			</if>
			<if test="icCardInt != null">
				IC_CARD_INT,
			</if>
			<if test="userType != null">
				USER_TYPE,
			</if>
			<if test="userImage != null">
				USER_IMAGE,
			</if>
			<if test="hospitalAddress != null">
				hospital_address,
			</if>
			<if test="userAvatar != null">
				user_avatar,
			</if>
			<if test="otherHospitalName != null">
				other_hospital_name,
			</if>
			<if test="loginErrorNum != null">
				login_error_num,
			</if>
			<if test="loginErrorFirstTime != null">
				login_error_first_time,
			</if>
			<if test="loginErrorLastTime != null">
				login_error_last_time,
			</if>
			<if test="lastUpdateDate != null">
				last_update_date,
			</if>
			<if test="grassroot != null">
				grassroot,
			</if>
		</trim>
		<trim prefix="values (" suffix=")" suffixOverrides=",">
			<if test="id != null">
				#{id,jdbcType=INTEGER},
			</if>
			<if test="realName != null">
				#{realName,jdbcType=VARCHAR},
			</if>
			<if test="birthday != null">
				#{birthday,jdbcType=DATE},
			</if>
			<if test="sex != null">
				#{sex,jdbcType=INTEGER},
			</if>
			<if test="mobilPhone != null">
				#{mobilPhone,jdbcType=VARCHAR},
			</if>
			<if test="telphone != null">
				#{telphone,jdbcType=VARCHAR},
			</if>
			<if test="email != null">
				#{email,jdbcType=VARCHAR},
			</if>
			<if test="certificateType != null">
				#{certificateType,jdbcType=INTEGER},
			</if>
			<if test="certificateNo != null">
				#{certificateNo,jdbcType=VARCHAR},
			</if>
			<if test="workUnit != null">
				#{workUnit,jdbcType=VARCHAR},
			</if>
			<if test="contactAddress != null">
				#{contactAddress,jdbcType=VARCHAR},
			</if>
			<if test="postCode != null">
				#{postCode,jdbcType=VARCHAR},
			</if>
			<if test="profession != null">
				#{profession,jdbcType=VARCHAR},
			</if>
			<if test="deptName != null">
				#{deptName,jdbcType=VARCHAR},
			</if>
			<if test="profTitle != null">
				#{profTitle,jdbcType=VARCHAR},
			</if>
			<if test="passwordQuestion != null">
				#{passwordQuestion,jdbcType=VARCHAR},
			</if>
			<if test="passwordQuestionAnswer != null">
				#{passwordQuestionAnswer,jdbcType=VARCHAR},
			</if>
			<if test="status != null">
				#{status,jdbcType=INTEGER},
			</if>
			<if test="lastLoginDate != null">
				#{lastLoginDate,jdbcType=DATE},
			</if>
			<if test="lastLoginIp != null">
				#{lastLoginIp,jdbcType=VARCHAR},
			</if>
			<if test="age != null">
				#{age,jdbcType=INTEGER},
			</if>
			<if test="workUnitId != null">
				#{workUnitId,jdbcType=INTEGER},
			</if>
			<if test="education != null">
				#{education,jdbcType=INTEGER},
			</if>
			<if test="regDate != null">
				#{regDate,jdbcType=TIMESTAMP},
			</if>
			<if test="healthCertificate != null">
				#{healthCertificate,jdbcType=VARCHAR},
			</if>
			<if test="icCardInt != null">
				#{icCardInt,jdbcType=VARCHAR},
			</if>
			<if test="userType != null">
				#{userType,jdbcType=VARCHAR},
			</if>
			<if test="userImage != null">
				#{userImage,jdbcType=INTEGER},
			</if>
			<if test="hospitalAddress != null">
				#{hospitalAddress,jdbcType=VARCHAR},
			</if>
			<if test="userAvatar != null">
				#{userAvatar,jdbcType=VARCHAR},
			</if>
			<if test="otherHospitalName != null">
				#{otherHospitalName,jdbcType=VARCHAR},
			</if>
			<if test="loginErrorNum != null">
				#{loginErrorNum,jdbcType=INTEGER},
			</if>
			<if test="loginErrorFirstTime != null">
				#{loginErrorFirstTime,jdbcType=BIGINT},
			</if>
			<if test="loginErrorLastTime != null">
				#{loginErrorLastTime,jdbcType=BIGINT},
			</if>
			<if test="lastUpdateDate != null">
				#{lastUpdateDate,jdbcType=TIMESTAMP},
			</if>
			<if test="grassroot != null">
				#{grassroot,jdbcType=INTEGER},
			</if>
		</trim>
	</insert>
	<update id="updateByPrimaryKeySelective" parameterType="com.ncme.springboot.model.SystemUser">
		update system_user
		<set>
			<if test="realName != null">
				REAL_NAME = #{realName,jdbcType=VARCHAR},
			</if>
			<if test="birthday != null">
				BIRTHDAY = #{birthday,jdbcType=DATE},
			</if>
			<if test="sex != null">
				SEX = #{sex,jdbcType=INTEGER},
			</if>
			<if test="mobilPhone != null">
				MOBIL_PHONE = #{mobilPhone,jdbcType=VARCHAR},
			</if>
			<if test="telphone != null">
				TELPHONE = #{telphone,jdbcType=VARCHAR},
			</if>
			<if test="email != null">
				EMAIL = #{email,jdbcType=VARCHAR},
			</if>
			<if test="certificateType != null">
				CERTIFICATE_TYPE = #{certificateType,jdbcType=INTEGER},
			</if>
			<if test="certificateNo != null">
				CERTIFICATE_NO = #{certificateNo,jdbcType=VARCHAR},
			</if>
			<if test="workUnit != null">
				WORK_UNIT = #{workUnit,jdbcType=VARCHAR},
			</if>
			<if test="contactAddress != null">
				CONTACT_ADDRESS = #{contactAddress,jdbcType=VARCHAR},
			</if>
			<if test="postCode != null">
				POST_CODE = #{postCode,jdbcType=VARCHAR},
			</if>
			<if test="profession != null">
				PROFESSION = #{profession,jdbcType=VARCHAR},
			</if>
			<if test="deptName != null">
				DEPT_NAME = #{deptName,jdbcType=VARCHAR},
			</if>
			<if test="profTitle != null">
				PROF_TITLE = #{profTitle,jdbcType=VARCHAR},
			</if>
			<if test="passwordQuestion != null">
				PASSWORD_QUESTION = #{passwordQuestion,jdbcType=VARCHAR},
			</if>
			<if test="passwordQuestionAnswer != null">
				PASSWORD_QUESTION_ANSWER = #{passwordQuestionAnswer,jdbcType=VARCHAR},
			</if>
			<if test="status != null">
				STATUS = #{status,jdbcType=INTEGER},
			</if>
			<if test="lastLoginDate != null">
				LAST_LOGIN_DATE = #{lastLoginDate,jdbcType=DATE},
			</if>
			<if test="lastLoginIp != null">
				LAST_LOGIN_IP = #{lastLoginIp,jdbcType=VARCHAR},
			</if>
			<if test="age != null">
				AGE = #{age,jdbcType=INTEGER},
			</if>
			<if test="workUnitId != null">
				WORK_UNIT_ID = #{workUnitId,jdbcType=INTEGER},
			</if>
			<if test="education != null">
				EDUCATION = #{education,jdbcType=INTEGER},
			</if>
			<if test="regDate != null">
				REG_DATE = #{regDate,jdbcType=TIMESTAMP},
			</if>
			<if test="healthCertificate != null">
				HEALTH_CERTIFICATE = #{healthCertificate,jdbcType=VARCHAR},
			</if>
			<if test="icCardInt != null">
				IC_CARD_INT = #{icCardInt,jdbcType=VARCHAR},
			</if>
			<if test="userType != null">
				USER_TYPE = #{userType,jdbcType=VARCHAR},
			</if>
			<if test="userImage != null">
				USER_IMAGE = #{userImage,jdbcType=INTEGER},
			</if>
			<if test="hospitalAddress != null">
				hospital_address = #{hospitalAddress,jdbcType=VARCHAR},
			</if>
			<if test="userAvatar != null">
				user_avatar = #{userAvatar,jdbcType=VARCHAR},
			</if>
			<if test="otherHospitalName != null">
				other_hospital_name = #{otherHospitalName,jdbcType=VARCHAR},
			</if>
			<if test="loginErrorNum != null">
				login_error_num = #{loginErrorNum,jdbcType=INTEGER},
			</if>
			<if test="loginErrorFirstTime != null">
				login_error_first_time = #{loginErrorFirstTime,jdbcType=BIGINT},
			</if>
			<if test="loginErrorLastTime != null">
				login_error_last_time = #{loginErrorLastTime,jdbcType=BIGINT},
			</if>
			<if test="lastUpdateDate != null">
				last_update_date = #{lastUpdateDate,jdbcType=TIMESTAMP},
			</if>
			<if test="grassroot != null">
				grassroot = #{grassroot,jdbcType=INTEGER},
			</if>
		</set>
		where ID = #{id,jdbcType=INTEGER}
	</update>
	<update id="updateByPrimaryKey" parameterType="com.ncme.springboot.model.SystemUser">
		update system_user
		set REAL_NAME = #{realName,jdbcType=VARCHAR},
		BIRTHDAY = #{birthday,jdbcType=DATE},
		SEX = #{sex,jdbcType=INTEGER},
		MOBIL_PHONE = #{mobilPhone,jdbcType=VARCHAR},
		TELPHONE = #{telphone,jdbcType=VARCHAR},
		EMAIL = #{email,jdbcType=VARCHAR},
		CERTIFICATE_TYPE = #{certificateType,jdbcType=INTEGER},
		CERTIFICATE_NO = #{certificateNo,jdbcType=VARCHAR},
		WORK_UNIT = #{workUnit,jdbcType=VARCHAR},
		CONTACT_ADDRESS = #{contactAddress,jdbcType=VARCHAR},
		POST_CODE = #{postCode,jdbcType=VARCHAR},
		PROFESSION = #{profession,jdbcType=VARCHAR},
		DEPT_NAME = #{deptName,jdbcType=VARCHAR},
		PROF_TITLE = #{profTitle,jdbcType=VARCHAR},
		PASSWORD_QUESTION = #{passwordQuestion,jdbcType=VARCHAR},
		PASSWORD_QUESTION_ANSWER = #{passwordQuestionAnswer,jdbcType=VARCHAR},
		STATUS = #{status,jdbcType=INTEGER},
		LAST_LOGIN_DATE = #{lastLoginDate,jdbcType=DATE},
		LAST_LOGIN_IP = #{lastLoginIp,jdbcType=VARCHAR},
		AGE = #{age,jdbcType=INTEGER},
		WORK_UNIT_ID = #{workUnitId,jdbcType=INTEGER},
		EDUCATION = #{education,jdbcType=INTEGER},
		REG_DATE = #{regDate,jdbcType=TIMESTAMP},
		HEALTH_CERTIFICATE = #{healthCertificate,jdbcType=VARCHAR},
		IC_CARD_INT = #{icCardInt,jdbcType=VARCHAR},
		USER_TYPE = #{userType,jdbcType=VARCHAR},
		USER_IMAGE = #{userImage,jdbcType=INTEGER},
		hospital_address = #{hospitalAddress,jdbcType=VARCHAR},
		user_avatar = #{userAvatar,jdbcType=VARCHAR},
		other_hospital_name = #{otherHospitalName,jdbcType=VARCHAR},
		login_error_num = #{loginErrorNum,jdbcType=INTEGER},
		login_error_first_time = #{loginErrorFirstTime,jdbcType=BIGINT},
		login_error_last_time = #{loginErrorLastTime,jdbcType=BIGINT},
		last_update_date = #{lastUpdateDate,jdbcType=TIMESTAMP},
		grassroot = #{grassroot,jdbcType=INTEGER}
		where ID = #{id,jdbcType=INTEGER}
	</update>

	<select id="getItemByAccountName" parameterType="java.lang.String"
		resultMap="BaseResultMap">
		select
		<include refid="Base_Column_List" />
		,suc.USER_PROVINCE_ID,t1.openid
		from system_user u
		LEFT JOIN system_account t1 on u.id = t1.user_id
		LEFT JOIN system_user_config suc on suc.USER_ID=u.id
		where
		t1.ACCOUNT_NAME = #{username,jdbcType=VARCHAR}
		OR u.MOBIL_PHONE =
		#{username,jdbcType=VARCHAR}
		OR u.EMAIL = #{username,jdbcType=VARCHAR}
	</select>

	<!-- 查询用户密码 -->
	<select id="getPassWordById" parameterType="java.lang.Integer"
		resultType="java.lang.String">
		select a.account_password as pwd from system_account a where
		a.account_status = 1 and a.user_id = #{userId,jdbcType=INTEGER}
	</select>

	<!-- 查询用户 职称名称 职称ID -->
	<select id="getDutyByUserId" parameterType="java.lang.Integer"
		resultType="com.ncme.springboot.footstone.response.Record">
		select v.* from exam_prop_val v inner join system_user_job_val j on v.id =
		j.job_id where j.user_id = #{userId,jdbcType=INTEGER}
	</select>

	<!-- 查询用户所在省市区名称及ID -->
	<select id="getSsqByUserId" parameterType="java.lang.Integer"
		resultType="com.ncme.springboot.footstone.response.Record">
		select v.id,v.name from exam_prop_val v inner join system_user_config c on
		v.id = c.USER_PROVINCE_ID where c.user_id = #{userId,jdbcType=INTEGER}
		union
		select v.id,v.name from exam_prop_val v inner join system_user_config c on
		v.id = c.USER_CITY_ID where c.user_id = #{userId,jdbcType=INTEGER}
		union
		select v.id,v.name from exam_prop_val v inner join system_user_config c on
		v.id = c.USER_COUNTIES_ID where c.user_id = #{userId,jdbcType=INTEGER}
	</select>

	<!-- 更新用户登录名称 -->
	<select id="updateSystemAccount">
		update system_account set account_name= #{userName} where user_id =
		#{userId}
	</select>

	<!-- 修改用户登录密码 -->
	<select id="updateSystemPassword">
		update system_account set account_password= #{userPassword} where user_id =
		#{userId}
	</select>

	<!-- 更新用户省市区 -->
	<select id="updateSsq">
		update system_user_config set user_province_id = #{proviceId}, user_city_id=
		#{cityId}, user_counties_id = #{districtId} where user_id = #{userId}
	</select>

	<!-- 更新用户职称 -->
	<select id="updateTitle">
		update system_user_job_val set job_id= #{titleId} where user_id= #{userId}
	</select>

	<!-- 更新用户学科 先删除 -->
	<select id="updateSubjectIdDelete">
		delete from system_user_prop_val where user_id=#{userId}
	</select>

	<!-- 更新用户学科 再更新 -->
	<select id="updateSubjectId">
		insert into system_user_prop_val (prop_id,user_id) VALUES
		(#{subjectId},#{userId})
	</select>

	<!-- 判断新手机号是否注册过平台账号 -->
	<select id="isRegister" resultType="java.lang.Integer">
		select count(*) from system_user u where u.MOBIL_PHONE = #{newPhone} and
		u.id != #{userId}
	</select>

	<!-- 判断用户证件号是否注册过平台账号 -->
	<select id="isRegisterIdCard" resultType="java.lang.Integer">
		select count(*) from system_user u where u.CERTIFICATE_NO = #{idCard} 
		<if test="userId != null">
			and u.CERTIFICATE_TYPE = #{userId}<!-- 此userId的值表示为用户证件类型的值-->
		</if>
		
	</select>

	<!-- 修改用户手机号码 -->
	<select id="updatePhone">
		update system_user u set u.MOBIL_PHONE = #{newPhone} where u.id = #{userId}
	</select>

	<!-- 根据手机号码获取用户基本信息 -->
	<select id="getAccountByPhone" parameterType="java.lang.String"
		resultMap="BaseResultMap">
		select
		<include refid="Base_Column_List" />
		from system_user u
		where u.MOBIL_PHONE = #{phone,jdbcType=VARCHAR}
	</select>

	<!-- 保存用户登录名称 -->
	<insert id="saveSystemAccount">
		insert into system_account (ACCOUNT_ID, ACCOUNT_NAME,
		ACCOUNT_PASSWORD,USER_ID,ACCOUNT_STATUS)
		values (#{userId}, #{userName}, #{password}, #{userId}, 1)
	</insert>

	<!-- 保存用户省市区 -->
	<select id="saveSsq">
		insert into system_user_config (USER_ID,USER_PROVINCE_ID,USER_CITY_ID,
		USER_COUNTIES_ID, IS_ENABLE)
		values (#{userId},#{proviceId},#{cityId}, #{districtId}, 1)
	</select>

	<!-- 保存用户职称 -->
	<select id="saveTitle">
		insert into system_user_job_val (job_id,user_id) values
		(#{titleId},#{userId})
	</select>

	<!-- 用户找回密码,即重置密码 -->
	<select id="resetPwd">
		update system_account a inner join system_user u on a.user_id = u.id
		set a.account_password = #{originalPassword} where u.mobil_phone =
		#{phone}
	</select>

	<!-- 定时任务自动推送-获取系统所用用户ID -->
	<select id="getAllUser" resultMap="BaseResultMap">
		select u.id from system_user u
	</select>

	<!-- 根据用户ID 及 (所学习项目)未申请学分,获取其学习项目 -->
	<select id="getMyStudys" resultType="com.ncme.springboot.footstone.response.Record">
		select t1.id,t1.name,t1.forma,t2.cv_set_start_date as startDate,t2.cv_set_end_date as endDate,t.LAST_UPDATE_DATE as lastUpdateDate,t.state,
		(
			case 
				when
					TIMESTAMPDIFF(DAY,date_sub(CURDATE(), interval 1 day),DATE_FORMAT(t2.cv_set_end_date,'%Y-%m-%d'))>0 
				then
					TIMESTAMPDIFF(DAY,date_sub(CURDATE(), interval 1 day),DATE_FORMAT(t2.cv_set_end_date,'%Y-%m-%d'))
				when 	
					TIMESTAMPDIFF(DAY,date_sub(CURDATE(), interval 1 day),DATE_FORMAT(t2.cv_set_end_date,'%Y-%m-%d'))=0 
				then 
					0
				else '已过期'
			end
		) as content2,
		'' as studentJoinUrl,
		'' as classNo,
		'' as token
		from log_study_cv_set t
		join cv_set t1 on t1.id = t.CV_SET_ID
		join cv_set_authorization t2 on t2.cv_set_id = t1.ID
		join cv_set_authorization_region t3 on t3.AUTHORIZATION_ID = t2.ID
		where t.system_user_id = #{userId} 
		and t.IS_APPLY_CREDIT = #{isApplyCredit}
		<!-- 
		and t3.PROP_VAL_ID = #{provinceId}
		 -->
		and t1.status = 5
		and (TIMESTAMPDIFF(DAY,date_sub(CURDATE(), interval 1 day),DATE_FORMAT(t2.cv_set_end_date,'%Y-%m-%d')) = 30 or TIMESTAMPDIFF(DAY,date_sub(CURDATE(), interval 1 day),DATE_FORMAT(t2.cv_set_end_date,'%Y-%m-%d')) = 0)
		group by t1.ID
	</select>

	<!-- 根据用户ID,获取用户已报名的直播课程 -->
	<select id="getSignUpCvLive" resultType="com.ncme.springboot.footstone.response.Record">
		SELECT t2.ID,t2.`NAME`,t2.BRAND,live.class_no,live.student_join_url,live.student_token,live.start_date,live.invalid_date AS end_date,
		TIMESTAMPDIFF(MINUTE,now(),DATE_FORMAT(live.start_date,'%Y-%m-%d %H:%i:%s')) as content2,s.userid 
		from cv_live_signup s 
		left join cv t2 on t2.id = s.cvid 
		left join cv_live live on live.cv_id = t2.ID
		where TIMESTAMPDIFF(MINUTE,now(),DATE_FORMAT(live.start_date,'%Y-%m-%d %H:%i:%s')) = 10 group by t2.ID
	</select>
	
	<!-- 检测消息是否已推送过 -->
	<select id="checkAlreadySend" resultType="java.lang.Integer">
		select count(*) noo from system_message m where m.system_user_id = #{userId} and m.message_content=#{msgContent}
	</select>

	<!-- 判断该手机号是否已获取过验证码 -->
	<select id="getYzmByPhone" resultType="java.lang.Integer">
		select count(*) from system_timeliness s where s.MOBILE_PHONE = #{phone}
	</select>

	<!-- 更新该手机号下的验证码 -->
	<select id="updateYzmByPhone">
		update system_timeliness s set s.code = #{yzm},s.date = #{cur} where
		s.MOBILE_PHONE=#{phone}
	</select>

	<!-- 保存验证码 -->
	<select id="saveYzmByPhone">
		insert into system_timeliness (MOBILE_PHONE,CODE,DATE) values
		(#{phone},#{yzm},#{cur})
	</select>

	<!-- 根据手机号,判断输入的验证码是否在有效时间内(5分钟) -->
	<select id="isValidTime" resultType="java.lang.Integer">
		select if(unix_timestamp(NOW()) > unix_timestamp(u.DATE),1,0) minu from
		system_timeliness u where u.MOBILE_PHONE = #{phone}
	</select>
	
	<!-- 判断用户名,即用户登录名称是否已存在 -->
	<select id="nameValidate" resultType="java.lang.Integer">
		select count(*) from system_account a where a.ACCOUNT_NAME = #{userName} and a.user_id != #{userId}
	</select>
	
	<!-- 获取用户的收藏列表（项目） -->
	<select id="getMyFavoriteByProject" resultType="com.ncme.springboot.footstone.response.Record">
		SELECT
			t.id AS projectId,
			t.file_path,
			t. NAME,
			csa.cv_set_level AS LEVEL,
			csa.cv_set_score AS score,
			csa.cv_set_cost_type AS cost_type,
			csa.cv_set_cost AS cost,
			f.type
		FROM 
			cv_set_favorites f 
		left join cv_set t on f.cv_set_id = t.id 
		LEFT JOIN cv_set_authorization csa ON csa.cv_set_id = t.id
		LEFT JOIN cv_set_authorization_region csar ON csar.AUTHORIZATION_ID = csa.id
		WHERE
			1 = 1
		AND csa.cv_set_start_date &lt;= curdate()
		AND csa.cv_set_end_date >= curdate()
		AND t. STATUS = 5
		and f.TYPE=0 and f.SYSTEM_USER_ID = #{userId}
		GROUP BY
			t.id
		ORDER BY
			f.FAVORITE_DATE DESC
	</select>

	<!-- 获取用户的收藏列表（课程） -->
	<select id="getMyFavorite" resultType="com.ncme.springboot.footstone.response.Record">
		select t.id projectId,t.FILE_PATH filePath,t.`NAME` ,'' as `LEVEL`,'' as score,
			t6.CV_SET_COST_TYPE costType,t6.CV_SET_COST cost,f.TYPE
			from cv_set_favorites f 
			left join cv t on f.CV_SET_ID = t.id 
			left join cv_schedule cve on t.ID= cve.cv_id 
			left join cv_set_schedule cvs on cve.SCHEDULE_ID =cvs.CV_SCHEDULE_ID 
			left join cv_set cs on cvs.CV_SET_ID=cs.id 
			LEFT JOIN cv_set_authorization t6 ON t6.cv_set_id = cs.id 
			LEFT JOIN cv_set_authorization_system_site t7 ON t7.AUTHORIZATION_ID = t6.ID 
		where t.id>0
		and cs.`STATUS` = 5
		and f.TYPE in (1,2) and f.SYSTEM_USER_ID = #{userId}
		group by 
			t.id
		ORDER BY
			f.FAVORITE_DATE DESC
	</select>

	<!-- 保存收藏 -->
	<insert id="addCollection">
		insert into cv_set_favorites (CV_SET_ID, SYSTEM_USER_ID, FAVORITE_DATE,TYPE)
		values (#{projectId,jdbcType=INTEGER}, #{userId,jdbcType=VARCHAR},now(),#{favType,jdbcType=INTEGER})
	</insert>
	
	<!-- 取消收藏 -->
	<delete id="cancelCollection">
		DELETE from cv_set_favorites  
		where CV_SET_ID=#{projectId,jdbcType=INTEGER} and SYSTEM_USER_ID=#{userId,jdbcType=INTEGER} and TYPE=#{favType,jdbcType=INTEGER}
	</delete>
	
	<!-- 保存用户反馈 -->
	<insert id="saveFeedBack">
		insert into feedback (ID, CREATER, TELPHONE,CONTENT,
		SYSTEM,BACKTIME,STATE,SYSTEMVERSION,
		SITE,uid)
		values (#{id,jdbcType=INTEGER},#{creater},#{phone},#{content},#{systemType},now(),#{state},#{systemVersion},
		#{site},#{userId})
	</insert>
	
</mapper>
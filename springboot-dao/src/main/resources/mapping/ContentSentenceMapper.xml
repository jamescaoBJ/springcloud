<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.ncme.springboot.mapper.ContentSentenceMapper">
	<resultMap id="BaseResultMap" type="com.ncme.springboot.model.ContentSentence">
		<id column="ID" jdbcType="INTEGER" property="id" />
		<result column="TITLE" jdbcType="VARCHAR" property="title" />
		<result column="TYPE" jdbcType="INTEGER" property="type" />
		<result column="DELI_DATE" jdbcType="TIMESTAMP" property="deliDate" />
		<result column="STATE" jdbcType="INTEGER" property="state" />
		<result column="ORDERNUM" jdbcType="INTEGER" property="ordernum" />
		<result column="CONTENT" jdbcType="VARCHAR" property="content" />
		<result column="SOURCE" jdbcType="VARCHAR" property="source" />
	</resultMap>
	<sql id="Base_Column_List">
		ID, TITLE, TYPE, DELI_DATE, STATE, ORDERNUM, CONTENT,
		SOURCE
	</sql>
	<select id="selectByPrimaryKey" parameterType="java.lang.Integer"
		resultMap="BaseResultMap">
		select
		<include refid="Base_Column_List" />
		from content_sentence
		where ID = #{id,jdbcType=INTEGER}
	</select>
	<delete id="deleteByPrimaryKey" parameterType="java.lang.Integer">
		delete from
		content_sentence
		where ID = #{id,jdbcType=INTEGER}
	</delete>
	<insert id="insert" parameterType="com.ncme.springboot.model.ContentSentence">
		insert into content_sentence
		(ID, TITLE, TYPE,
		DELI_DATE, STATE, ORDERNUM,
		CONTENT, SOURCE)
		values
		(#{id,jdbcType=INTEGER}, #{title,jdbcType=VARCHAR},
		#{type,jdbcType=INTEGER},
		#{deliDate,jdbcType=TIMESTAMP},
		#{state,jdbcType=INTEGER}, #{ordernum,jdbcType=INTEGER},
		#{content,jdbcType=VARCHAR}, #{source,jdbcType=VARCHAR})
	</insert>
	<insert id="insertSelective" parameterType="com.ncme.springboot.model.ContentSentence">
		insert into content_sentence
		<trim prefix="(" suffix=")" suffixOverrides=",">
			<if test="id != null">
				ID,
			</if>
			<if test="title != null">
				TITLE,
			</if>
			<if test="type != null">
				TYPE,
			</if>
			<if test="deliDate != null">
				DELI_DATE,
			</if>
			<if test="state != null">
				STATE,
			</if>
			<if test="ordernum != null">
				ORDERNUM,
			</if>
			<if test="content != null">
				CONTENT,
			</if>
			<if test="source != null">
				SOURCE,
			</if>
		</trim>
		<trim prefix="values (" suffix=")" suffixOverrides=",">
			<if test="id != null">
				#{id,jdbcType=INTEGER},
			</if>
			<if test="title != null">
				#{title,jdbcType=VARCHAR},
			</if>
			<if test="type != null">
				#{type,jdbcType=INTEGER},
			</if>
			<if test="deliDate != null">
				#{deliDate,jdbcType=TIMESTAMP},
			</if>
			<if test="state != null">
				#{state,jdbcType=INTEGER},
			</if>
			<if test="ordernum != null">
				#{ordernum,jdbcType=INTEGER},
			</if>
			<if test="content != null">
				#{content,jdbcType=VARCHAR},
			</if>
			<if test="source != null">
				#{source,jdbcType=VARCHAR},
			</if>
		</trim>
	</insert>
	<update id="updateByPrimaryKeySelective" parameterType="com.ncme.springboot.model.ContentSentence">
		update content_sentence
		<set>
			<if test="title != null">
				TITLE = #{title,jdbcType=VARCHAR},
			</if>
			<if test="type != null">
				TYPE = #{type,jdbcType=INTEGER},
			</if>
			<if test="deliDate != null">
				DELI_DATE = #{deliDate,jdbcType=TIMESTAMP},
			</if>
			<if test="state != null">
				STATE = #{state,jdbcType=INTEGER},
			</if>
			<if test="ordernum != null">
				ORDERNUM = #{ordernum,jdbcType=INTEGER},
			</if>
			<if test="content != null">
				CONTENT = #{content,jdbcType=VARCHAR},
			</if>
			<if test="source != null">
				SOURCE = #{source,jdbcType=VARCHAR},
			</if>
		</set>
		where ID = #{id,jdbcType=INTEGER}
	</update>
	<update id="updateByPrimaryKey" parameterType="com.ncme.springboot.model.ContentSentence">
		update
		content_sentence
		set TITLE = #{title,jdbcType=VARCHAR},
		TYPE =
		#{type,jdbcType=INTEGER},
		DELI_DATE = #{deliDate,jdbcType=TIMESTAMP},
		STATE = #{state,jdbcType=INTEGER},
		ORDERNUM =
		#{ordernum,jdbcType=INTEGER},
		CONTENT = #{content,jdbcType=VARCHAR},
		SOURCE = #{source,jdbcType=VARCHAR}
		where ID = #{id,jdbcType=INTEGER}
	</update>
</mapper>
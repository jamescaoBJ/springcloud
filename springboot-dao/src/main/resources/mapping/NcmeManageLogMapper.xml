<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.ncme.springboot.mapper.NcmeManageLogMapper">
	<resultMap id="BaseResultMap" type="com.ncme.springboot.model.NcmeManageLog">
		<id column="ID" jdbcType="INTEGER" property="id" />
		<result column="LOGTIME" jdbcType="DATE" property="logtime" />
		<result column="OPERATOR" jdbcType="VARCHAR" property="operator" />
		<result column="FUNC" jdbcType="VARCHAR" property="func" />
		<result column="TBL" jdbcType="VARCHAR" property="tbl" />
		<result column="KIND" jdbcType="VARCHAR" property="kind" />
		<result column="BEFOR_DATA" jdbcType="VARCHAR" property="beforData" />
		<result column="AFTER_DATA" jdbcType="VARCHAR" property="afterData" />
	</resultMap>
	<sql id="Base_Column_List">
		ID, LOGTIME, OPERATOR, FUNC, TBL, KIND, BEFOR_DATA, AFTER_DATA
	</sql>
	<select id="selectByPrimaryKey" parameterType="java.lang.Integer"
		resultMap="BaseResultMap">
		select
		<include refid="Base_Column_List" />
		from ncme_manage_log
		where ID = #{id,jdbcType=INTEGER}
	</select>
	<delete id="deleteByPrimaryKey" parameterType="java.lang.Integer">
		delete from ncme_manage_log
		where ID = #{id,jdbcType=INTEGER}
	</delete>
	<insert id="insert" parameterType="com.ncme.springboot.model.NcmeManageLog">
		insert into ncme_manage_log (ID, LOGTIME, OPERATOR,
		FUNC, TBL, KIND, BEFOR_DATA,
		AFTER_DATA)
		values (#{id,jdbcType=INTEGER}, #{logtime,jdbcType=DATE},
		#{operator,jdbcType=VARCHAR},
		#{func,jdbcType=VARCHAR}, #{tbl,jdbcType=VARCHAR}, #{kind,jdbcType=VARCHAR},
		#{beforData,jdbcType=VARCHAR},
		#{afterData,jdbcType=VARCHAR})
	</insert>
	<insert id="insertSelective" parameterType="com.ncme.springboot.model.NcmeManageLog">
		insert into ncme_manage_log
		<trim prefix="(" suffix=")" suffixOverrides=",">
			<if test="id != null">
				ID,
			</if>
			<if test="logtime != null">
				LOGTIME,
			</if>
			<if test="operator != null">
				OPERATOR,
			</if>
			<if test="func != null">
				FUNC,
			</if>
			<if test="tbl != null">
				TBL,
			</if>
			<if test="kind != null">
				KIND,
			</if>
			<if test="beforData != null">
				BEFOR_DATA,
			</if>
			<if test="afterData != null">
				AFTER_DATA,
			</if>
		</trim>
		<trim prefix="values (" suffix=")" suffixOverrides=",">
			<if test="id != null">
				#{id,jdbcType=INTEGER},
			</if>
			<if test="logtime != null">
				#{logtime,jdbcType=DATE},
			</if>
			<if test="operator != null">
				#{operator,jdbcType=VARCHAR},
			</if>
			<if test="func != null">
				#{func,jdbcType=VARCHAR},
			</if>
			<if test="tbl != null">
				#{tbl,jdbcType=VARCHAR},
			</if>
			<if test="kind != null">
				#{kind,jdbcType=VARCHAR},
			</if>
			<if test="beforData != null">
				#{beforData,jdbcType=VARCHAR},
			</if>
			<if test="afterData != null">
				#{afterData,jdbcType=VARCHAR},
			</if>
		</trim>
	</insert>
	<update id="updateByPrimaryKeySelective" parameterType="com.ncme.springboot.model.NcmeManageLog">
		update ncme_manage_log
		<set>
			<if test="logtime != null">
				LOGTIME = #{logtime,jdbcType=DATE},
			</if>
			<if test="operator != null">
				OPERATOR = #{operator,jdbcType=VARCHAR},
			</if>
			<if test="func != null">
				FUNC = #{func,jdbcType=VARCHAR},
			</if>
			<if test="tbl != null">
				TBL = #{tbl,jdbcType=VARCHAR},
			</if>
			<if test="kind != null">
				KIND = #{kind,jdbcType=VARCHAR},
			</if>
			<if test="beforData != null">
				BEFOR_DATA = #{beforData,jdbcType=VARCHAR},
			</if>
			<if test="afterData != null">
				AFTER_DATA = #{afterData,jdbcType=VARCHAR},
			</if>
		</set>
		where ID = #{id,jdbcType=INTEGER}
	</update>
	<update id="updateByPrimaryKey" parameterType="com.ncme.springboot.model.NcmeManageLog">
		update ncme_manage_log
		set LOGTIME = #{logtime,jdbcType=DATE},
		OPERATOR = #{operator,jdbcType=VARCHAR},
		FUNC = #{func,jdbcType=VARCHAR},
		TBL = #{tbl,jdbcType=VARCHAR},
		KIND = #{kind,jdbcType=VARCHAR},
		BEFOR_DATA = #{beforData,jdbcType=VARCHAR},
		AFTER_DATA = #{afterData,jdbcType=VARCHAR}
		where ID = #{id,jdbcType=INTEGER}
	</update>
</mapper>